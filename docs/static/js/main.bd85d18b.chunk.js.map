{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","handleSubmit","e","preventDefault","length","categories","onSubmit","type","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","SetState","useEffect","then","img","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACpBC,mBAAS,IADW,mBACvCC,EADuC,KAChCC,EADgC,KAIxCC,EAAe,SAACC,GAClBA,EAAEC,iBACEJ,EAAMK,OAAS,IACfP,GAAe,SAACQ,GAAD,OAAkBN,GAAlB,mBAA4BM,OAC3CL,EAAS,MAIjB,OACI,uBAAMM,SAAUL,EAAhB,UACI,uBACIM,KAAK,OACLR,MAAOA,EACPS,SAda,SAACN,GAAD,OAAOF,EAASE,EAAEO,OAAOV,UAgB1C,wBACIQ,KAAK,SACLD,SAAUL,EAFd,yB,QCpBCS,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,sBAAKC,UAAW,OAAhB,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAKA,Q,uBCLJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,mGACqFO,UAAUF,IAD/F,SAEDG,MAAOR,GAFN,cAEbS,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,YAA2B,IAAzBC,EAAwB,EAAxBA,GAAIf,EAAoB,EAApBA,MAAOgB,EAAa,EAAbA,OAC/B,MAAO,CACHD,KACAf,QACAC,IAAG,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBhB,QATnB,kBAaZY,GAbY,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZnB,mBAAS,CAC/ByB,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAC,GAAG,OACtBH,EAAS,CACLT,KAAMY,EACNL,SAAQ,SAGjB,CAACb,IAEGc,EDXoBK,CAAanB,GAAhCU,EAF2B,EAEhCJ,KAAaO,EAFmB,EAEnBA,QAEhB,OACI,qCACKA,GAAW,4CACZ,6BAAKb,IACL,qBAAKJ,UAAW,YAAhB,SAEQc,EAAOF,KAAI,SAAEU,GAAF,OACP,cAAC,EAAD,eAA+BA,GAAbA,EAAIT,aE0B/BW,EArCM,WAAM,MAEavC,mBAAS,CAAC,gBAFvB,mBAEhBO,EAFgB,KAEJR,EAFI,KAUvB,OACI,gCACI,qDACA,cAAC,EAAD,CACIA,cAAgBA,IAEpB,uBACA,6BACKQ,EAAWoB,KAAK,SAAAR,GAAQ,OAErB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,Y,MCrB7BqB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bd85d18b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({ setCategories }) => {\n    const [value, setValue] = useState('')\n\n    const handleInputValue = (e) => setValue(e.target.value)\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (value.length > 2 ) {\n            setCategories( (categories) => [ value, ...categories]);\n            setValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={value}\n                onChange={handleInputValue}\n            />\n            <button \n                type=\"submit\"\n                onSubmit={handleSubmit}\n            >\n                Agregar\n            </button>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const GifGridItem = ({ title, url }) => {\n    return (\n        <div className={'card'}>\n            <img src={url} alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\n","\n\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=8PWcEszlo7Rhy629Sjcxh7aenTeGDoyx&limit=10&q=${encodeURI(category)}`;\n    const res = await fetch( url );\n    const {data} = await res.json();\n\n    const gifs = data.map(({id, title, images }) => {\n        return {\n            id,\n            title,\n            url: images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { GifGridItem } from './GifGridItem'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nexport const GifGrid = ({category}) => {\n    \nconst {data:images, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            {loading && <p>...cargando</p>}\n            <h3>{category}</h3>\n            <div className={'card-grid'}>\n                {\n                    images.map(( img ) => (\n                        <GifGridItem key={img.id} { ...img } />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n}","import { getGifs } from \"../helpers/getGifs\";\nimport {useEffect, useState} from 'react';\n\nexport const useFetchGifs = (category) => {\n    const [state, SetState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category).then(img =>\n            SetState({\n                data: img,\n                loading:false\n            })\n        )\n    }, [category])\n\n    return state;\n}","import React, {useState} from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\n\nconst GifExpertApp = () => {\n    // const [state, setstate] = useState('')\n    const [categories, setCategories] = useState(['dragon ball'])\n\n    // const handleAdd = () => {\n    //     // const newCategories = categories.concat('boruto')\n    //     // setCategories(newCategories);\n    //     setCategories([...categories, 'boruto']);\n    // }\n\n    return (\n        <div>\n            <h2>Something Beautiful</h2>\n            <AddCategory\n                setCategories={ setCategories }\n            />\n            <hr/>\n            <ol>\n                {categories.map( category => (\n                    // <li key={category}>{category}</li>\n                    <GifGrid\n                        key={category}\n                        category={category}\n                    />\n                ))}\n            </ol>\n            {/* <div>\n                <button\n                    onClick={handleAdd}\n                >\n                    Agregar\n                </button>\n            </div> */}\n        </div>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}